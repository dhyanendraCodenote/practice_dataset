# -*- coding: utf-8 -*-
"""categories.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15yvOTlBhxsZ2cqumCaiFFHk2zSdBYq7j

In this dataset , column "**Unit of Appropriation**" is categorized into different categories by creating the seperate category columns.
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

df= pd.read_csv('expense.csv')

df.head()

df.describe()

df.info()

# dropping null rows
df=df.drop([0,1,2])

df.shape

df.reset_index(inplace=True)

df.head()

# checking null rows in 'Unit of Appropriation Name'
df['Unit of Appropriation Name'].isnull().sum()

df['PS_OTPS_Ind'].unique()

# find unique values
df['Unit of Appropriation Name'].unique()

family = ['child','family']
invest = ['lump sum','asset']
food = ['food']
health = ['medical','mental','health','disease','- ps','care']
residental =  ['hous','home']
fire_emgncy = ['fire']
envirnmt = ['water','environmental','cleaning']

# (df['Unit of Appropriation Name']=='OTPS-HIGHWAY OPERATIONS').sum()

category = ['family','invest','food','health','residental','fire_emgncy','envirnmt']

indx =[]
for y in family:
  indx.extend((df[df['Unit of Appropriation Name'].str.lower().str.contains(y)].index).tolist())
  #print(list(set(indx)))
  k= list(set(indx))
df.loc[k,'category']= 'family'

indx =[]
for y in invest:
  indx.extend((df[df['Unit of Appropriation Name'].str.lower().str.contains(y)].index).tolist())
  #print(list(set(indx)))
  k= list(set(indx))
df.loc[k,'category']= 'invest'

indx =[]
for y in food:
  indx.extend((df[df['Unit of Appropriation Name'].str.lower().str.contains(y)].index).tolist())
  #print(list(set(indx)))
  k= list(set(indx))
df.loc[k,'category']= 'food'

indx =[]
for y in health:
  indx.extend((df[df['Unit of Appropriation Name'].str.lower().str.contains(y)].index).tolist())
  #print(list(set(indx)))
  k= list(set(indx))
df.loc[k,'category']= 'health'

indx =[]
for y in residental:
  indx.extend((df[df['Unit of Appropriation Name'].str.lower().str.contains(y)].index).tolist())
  #print(list(set(indx)))
  k= list(set(indx))
df.loc[k,'category']= 'residental'

indx =[]
for y in fire_emgncy:
  indx.extend((df[df['Unit of Appropriation Name'].str.lower().str.contains(y)].index).tolist())
  #print(list(set(indx)))
  k= list(set(indx))
df.loc[k,'category']= 'fire_emgncy'

indx =[]
for y in envirnmt:
  indx.extend((df[df['Unit of Appropriation Name'].str.lower().str.contains(y)].index).tolist())
  #print(list(set(indx)))
  k= list(set(indx))
df.loc[k,'category']= 'envirnmt'

df.head(n=100)

# total categories after operation
df['category'].unique()

# replacing remaining(NaN) by Other
df['category']=df['category'].replace(np.nan , 'Others')

df.head(n=50)

# checking health data
df[df['category'] =='health']

# saving final dataframe in CSV file
 df.to_csv('final.csv')

df['category'].value_counts()

plt.figure(figsize=(13, 8))
b=sns.countplot(x=df['category'],data= df)
b.axes.set_title("Expense Distribution",fontsize=20)

plt.xticks(rotation=45)
plt.show()

# by removing others, compairing remaing category
df1 =df[df['category']!='Others']

df1

plt.figure(figsize=(13, 8))
b=sns.countplot(x=df1['category'],data= df1)
b.axes.set_title("Expense Distribution",fontsize=20)

plt.xticks(rotation=45)
plt.show()

df['Agency Name'].unique()

df['Agency Name'].value_counts()

x=df['Agency Name'].value_counts()[:20].index
df2=df[df['Agency Name'].isin(x)]

plt.figure(figsize=(15, 8))
b=sns.countplot(x=df2['Agency Name'])
b.axes.set_title("Expense Distribution",fontsize=20)

plt.xticks(rotation=45)
plt.show()

